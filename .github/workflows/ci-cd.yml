name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20" # Match the Node version your app requires

      # 3. Install Dependencies
      - name: Install dependencies
        working-directory: ./TravelBlogFrontend
        run: npm install

      # # 4. Run Tests
      # - name: Run tests
      #   run: npm test

      # # 5. Lint and Format Code
      # - name: Run ESLint
      #   run: npm run lint

      # 6. Build the Application
      - name: Build Next.js app
        working-directory: ./TravelBlogFrontend
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    # if: github.ref == 'refs/heads/main'

    steps:
      # 1. Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      # 3. Install Dependencies
      - name: Install dependencies
        working-directory: ./TravelBlogFrontend
        run: npm install

      # 4. Build the Application
      - name: Build Next.js app
        working-directory: ./TravelBlogFrontend
        run: npm run build

      # 5. Sync Build Output to S3
      - name: Sync Build to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-west-2"
        run: |
          aws s3 sync ./build s3://travelblog-20241108095333-hostingbucket-dev --delete

      # 6. Invalidate CloudFront Cache
      - name: Invalidate CloudFront
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-west-2"
        run: |
          aws cloudfront create-invalidation --distribution-id E34W14WGY4LHSB --paths "/*"
